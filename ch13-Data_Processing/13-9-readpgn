
# Listing 13-9. readpgn, Parse a PGN Game and Print Game in a Column

pgnfile="${1:?}"
header=0
game=0
gettag() #@ create a variable with the same name and value as the tag
{
   local tagline=$1
   tag=${tagline%% *}          ## get line before the first space
   tag=${tag#?}                ## remove the open bracket
   IFS='"' read a val b <<. ## get the 2nd field, using " as delimiter
    $tagline
.
   eval "$tag=\$val"
}

{
   while IFS= read -r line
   do
      case $line in
        \[*) gettag "$line" ;;
        "") [ -n "$Event" ] && break;;   ## skip blank lines at beginning of file
      esac
   done
   mapfile -t game                       ## read remainder of the file
} < "$pgnfile"

## remove blank lines from end of array
while [ -z "${game[${#game[@]}-1]}" ]
do
   unset game[${#game[@]}-1]
done

## print the game with header
echo "Event: $Event"
echo "Date: $Date"
echo

set -f
printf "%4s %-10s %-10s\n" "" White Black "" ========== ========== \
            "" "$White" "$Black" ${game[@]:0:${#game[@]}-1}
printf "%s\n" "${game[${#game[@]}-1]}"

